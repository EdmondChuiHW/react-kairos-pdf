{"version":3,"sources":["i18n.js","components/ButtonAppBar/ButtonAppBar.js","Utils.js","libs/karios-pdf-parser/pdf-parse.js","libs/karios-pdf-parser/errors.js","libs/karios-pdf-parser/handle-session/handle-session.js","libs/karios-pdf-parser/consts.js","libs/karios-pdf-parser/strings-to-time-total/strings-to-time-total.js","libs/karios-pdf-parser/utils.js","libs/karios-pdf-parser/categories/parsers/worship-tester.js","libs/karios-pdf-parser/categories/category-types.js","libs/karios-pdf-parser/categories/parsers/devotion-tester.js","libs/karios-pdf-parser/categories/parsers/focus-prayer-tester.js","libs/karios-pdf-parser/categories/parsers/chapter-review-tester.js","libs/karios-pdf-parser/categories/parsers/chapter-intro-tester.js","libs/karios-pdf-parser/categories/parsers/video-tester.js","libs/karios-pdf-parser/categories/guess-category.js","libs/karios-pdf-parser/handle-row/handle-row.js","libs/karios-pdf-parser/handle-page/handle-page.js","libs/karios-pdf-parser/index.js","components/PdfFilePicker/PdfFilePicker.js","components/Loading/Loading.js","utils/ui-utils.js","utils/utils.js","components/TableByCategories/TableByCategories.js","components/TableBySessions/TableBySessions.js","serviceWorker.js","index.js","App.js","../node_modules/pdfjs-dist/build sync"],"names":["isHrefOnGithub","includes","resolveLoadPathFromHref","ifElse","always","i18n","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","window","location","href","fallbackLng","debug","interpolation","escapeValue","withStyles","grow","flexGrow","menuButton","marginLeft","marginRight","props","classes","_useTranslation","useTranslation","t","Object","slicedToArray","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","color","className","readFileAsArrayBuffer","file","Observable","subscriber","reader","FileReader","onload","next","result","complete","onerror","ev","error","readAsArrayBuffer","abort","throwError","Error","PDFJS","DEFAULT_OPTIONS","pagerender","pageData","getTextContent","normalizeWhitespace","disableCombineTextItems","then","textContent","lastY","text","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","items","Symbol","iterator","done","item","value","transform","str","err","return","max","_callee","dataBuffer","options","ret","doc","metaData","counter","i","rendered","regenerator_default","wrap","_context","prev","numpages","numrender","info","metadata","version","require","GlobalWorkerOptions","workerSrc","getDocument","sent","numPages","getMetadata","catch","console","raw","getPage","push","concat","destroy","abrupt","stop","this","PDF","ParsingErrors","invalidSession","ofInvalidSession","rawStr","type","mismatchedDurations","ofMismatchedDurations","declaredDuration","totalDuration","handleSession","sessionStr","sessionMatch","match","dateMatch","date","moment","errors","isValid","sessionNumber","Number","parseInt","acceptedTimeFormats","regexMatcher","regexFirstMatchLens","lensIndex","strToMinuteNum","pipe","isEmpty","view","mapToDuration","duration","zeroDuration","accFn","invoker","filterFn","flip","gt","xForm","compose","map","filter","stringsToTimeTotal","transduce","startsWithGpgOrFt","test","isNilOrEmpty","either","isNil","stripAllQuotes","s","replace","throwErrorWithMessage","msg","worshipTester","any","worshipParser","unless","find","when","assignedGroup","category","devotionTester","devotionTopicMatcher","devotionParser","reduce","acc","curr","findLast","complement","topic","focusPrayerTester","focusPrayerMatcher","focusPrayerParser","converge","prayerTarget","chapterReviewTester","chapterReviewMatcher","chapterIndexLens","chapterTopicLens","chapterReviewParser","juxt","trim","apply","number","chapterIntroTester","chapterIntroMatcher","viewChapterNumber","viewChapterTopic","chapterIntroParser","videoTester","videoTitleMatcher","videoParser","title","guessCategoryFromRawStrings","cond","T","getDeclaredDurationFromStr","getStartTime","getDeclaredDuration","getActivityTextStrings","slice","length","dec","identity","getFacilitatorStr","last","getDeclaredAndActualTimesAndActivityText","getErrors","declared","tallied","asMilliseconds","total","activityTexts","asMinutes","handleRow","startTime","facilitator","isStrStartTime","oldHandlePage","curry","sessions","rows","pendingRowInput","discarded","facilitatorToRows","allFacilitatorsRows","pushIndexToAllExistingFacilitators","index","keys","forEach","name","hasStartedParsingRows","allTextsIndex","currentRowIndex","startsWith","r","sessionIndex","toLocaleLowerCase","viewItems","prop","viewItemStr","isStrSession","lensPath","assocType","assoc","dissocType","dissoc","viewType","assocRawStr","makeDiscard","sessionsLens","lensProp","rowsLens","pendingCellsLens","lastYLens","appendWithLens","over","append","appendToSessions","appendToPendingCells","makeCellFlushMarker","ifTypeEquals","equals","flushPendingCellsIntoRowIfNotEmpty","set","handlePage","cur","pendingCells","pdfOptionThenBuffer","pdf","renderOptions","readBufferToPages","from","PdfFilePicker","onResultLoaded","_useState","useState","_useState2","snackBarMessage","setSnackBarMessage","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setFile","useEffect","sub","switchMap","tap","pages","log","facilitatorsIndex","objectSpread","facilitators","finalize","subscribe","unsubscribe","CircularProgress","index_es","dropZoneClass","filesLimit","acceptedFiles","dropzoneText","showPreviewsInDropzone","showFileNamesInPreview","showAlerts","onDrop","onDropRejected","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","Loading","RowWithKey","key","children","Header","h","CapitalizedHeader","lowerCase","capitalize","TwoFragments","b","Fragment","Cell","mapWithBr","addIndex","react","replaceLineBreakWithBr","is","String","split","fallBackTextFn","catEq","propEq","viewTextFromCategory","join","rowCatEq","pathEq","fallbackTextForRow","head","excelLinefeed","formatAsShortName","dropLast","formatSessionDateStr","sessionTime","format","formatRowTimeStr","rowTime","nameFromRow","path","mergeDeepWith","mapRowsToIndexByCategoryThenName","viewByIndex","mapRowToStringWithFallback","row","replaceWithExcelLineFeed","sortedCategories","TableByCategories","_ref","catToNameToRowIndex","useMemo","names","sortBy","makeRows","makeTable","viewNameIndexFromCatType","viewRowIndexArrayFromName","mapToCellsByCatType","namesToRowIndex","catType","c","renderCell","prepend","renderRow","catTypes","TableBySessions","Table","sI","Session","makeStartTimeAndCategories","collectRowsUnderSessionIndex","sessionTimeLens","sessionNumberLens","session","TimeDurationCell","extractShortNameFromRow","mapWithShortName","findRowsWithCategory","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","fallback","setResult","TableExport","document","getElementsByTagName","bootstrap","trimWhitespace","formats","CssBaseline","Loading_Loading","ButtonAppBar_ButtonAppBar","style","textAlign","gutterBottom","TableByCategories_TableByCategories_TableByCategories","TableBySessions_TableBySessions_TableBySessions","PdfFilePicker_PdfFilePicker","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","webpackEmptyContext","req","e","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.747d3bb7.chunk.js","sourcesContent":["// Feb 18 2019 https://react.i18next.com/latest/using-with-hooks\nimport i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\n\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport {always, ifElse, includes} from \"ramda\";\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\nconst isHrefOnGithub = includes('github.io');\nconst resolveLoadPathFromHref = ifElse(\n  isHrefOnGithub,\n  always('/react-karios-pdf/locales/{{lng}}/{{ns}}.json'),\n  always('/locales/{{lng}}/{{ns}}.json'),\n);\n\ni18n\n// load translation using xhr -> see /public/locales\n// learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    backend: {\n      loadPath: () => resolveLoadPathFromHref(window.location.href),\n    },\n    fallbackLng: 'en',\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nexport default i18n;\n","// Feb 18 2019 https://material-ui.com/demos/app-bar/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {useTranslation} from \"react-i18next\";\n\nconst styles = {\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nfunction ButtonAppBar(props) {\n  const {classes} = props;\n  const [t] = useTranslation();\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            {t('title')}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);\n","import {Observable, throwError} from \"rxjs\";\n\nexport const readFileAsArrayBuffer = (file) => {\n  if (!file) {\n    return throwError(new Error(`file cannot be undefined`));\n  }\n  return new Observable(subscriber => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      subscriber.next(reader.result);\n      subscriber.complete();\n    };\n    reader.onerror = ev => {\n      subscriber.error(ev);\n    };\n    reader.readAsArrayBuffer(file);\n    return () => reader.abort();\n  });\n};\n","var PDFJS = null;\n\nfunction render_page(pageData) {\n  //check documents https://mozilla.github.io/pdf.js/\n  //ret.text = ret.text ? ret.text : \"\";\n\n  let render_options = {\n    //replaces all occurrences of whitespace with standard spaces (0x20). The default value is `false`.\n    normalizeWhitespace: false,\n    //do not attempt to combine same line TextItem's. The default value is `false`.\n    disableCombineTextItems: false\n  };\n\n  return pageData.getTextContent(render_options)\n    .then(function (textContent) {\n      let lastY = null;\n      let text = '';\n      //https://github.com/mozilla/pdf.js/issues/8963\n      //https://github.com/mozilla/pdf.js/issues/2140\n      //https://gist.github.com/hubgit/600ec0c224481e910d2a0f883a7b98e3\n      //https://gist.github.com/hubgit/600ec0c224481e910d2a0f883a7b98e3\n      for (let item of textContent.items) {\n        if (!lastY || lastY === item.transform[5]) {\n          text += item.str;\n        } else {\n          text += '\\n' + item.str;\n        }\n        lastY = item.transform[5];\n      }\n      //let strings = textContent.items.map(item => item.str);\n      //let text = strings.join(\"\\n\");\n      //text = text.replace(/[ ]+/ig,\" \");\n      //ret.text = `${ret.text} ${text} \\n\\n`;\n      return text;\n    });\n}\n\nconst DEFAULT_OPTIONS = {\n  pagerender: render_page,\n  max: 0,\n};\n\nasync function PDF(dataBuffer, options) {\n  let ret = {\n    numpages: 0,\n    numrender: 0,\n    info: null,\n    metadata: null,\n    text: \"\",\n    version: null\n  };\n\n  if (typeof options == 'undefined') options = DEFAULT_OPTIONS;\n  if (typeof options.pagerender != 'function') options.pagerender = DEFAULT_OPTIONS.pagerender;\n  if (typeof options.max != 'number') options.max = DEFAULT_OPTIONS.max;\n\n  PDFJS = PDFJS ? PDFJS : require(`pdfjs-dist`);\n\n  ret.version = PDFJS.version;\n\n  // Disable workers to avoid yet another cross-origin issue (workers need\n  // the URL of the script to be loaded, and dynamically loading a cross-origin\n  // script does not work).\n  // PDFJS.disableWorker = true;\n  // see postinstall in package.json\n  PDFJS.GlobalWorkerOptions.workerSrc = 'pdf.worker.min.js';\n  let doc = await PDFJS.getDocument(dataBuffer);\n  ret.numpages = doc.numPages;\n\n  let metaData = await doc.getMetadata().catch(function (err) {\n    console.error(err);\n    return null;\n  });\n\n  ret.info = metaData ? metaData.info : null;\n  ret.metadata = metaData ? metaData.metadata : null;\n\n  let counter = options.max <= 0 ? doc.numPages : options.max;\n  counter = counter > doc.numPages ? doc.numPages : counter;\n\n  ret.text = \"\";\n  ret.raw = [];\n\n  for (var i = 1; i <= counter; i++) {\n    let rendered = await doc.getPage(i).then(pageData => options.pagerender(pageData)).catch((err) => {\n      console.error(err);\n      return \"\";\n    });\n\n    ret.raw.push(rendered);\n    ret.text = `${ret.text}\\n\\n${rendered}`;\n  }\n\n  ret.numrender = counter;\n  doc.destroy();\n\n  return ret;\n}\n\nexport default PDF;\n","export const ParsingErrors = {\n  invalidSession: \"invalidSession\",\n  ofInvalidSession(rawStr) {\n    return {\n      rawStr,\n      type: ParsingErrors.invalidSession,\n    };\n  },\n\n  mismatchedDurations: \"mismatchedDurations\",\n  ofMismatchedDurations(rawStr, declaredDuration, totalDuration) {\n    return {\n      rawStr,\n      type: ParsingErrors.mismatchedDurations,\n      declaredDuration,\n      totalDuration\n    };\n  },\n};\n\n","import moment from \"moment\";\nimport {ParsingErrors} from \"../errors\";\n\nexport const handleSession = (sessionStr) => {\n  const sessionRegExp = /Session ([0-9]+)/;\n  const dateRegExp = /- (.*)/;\n  const sessionMatch = sessionStr.match(sessionRegExp);\n  const dateMatch = sessionStr.match(dateRegExp);\n\n  const date = moment(dateMatch && dateMatch[1], 'dddd, DD MMMM, YYYY');\n  const errors = (!sessionMatch || !date.isValid())\n    ? [ParsingErrors.ofInvalidSession(sessionStr)]\n    : [];\n  return {\n    sessionNumber: Number.parseInt(sessionMatch && sessionMatch[1]),\n    date: date,\n    errors,\n  };\n};\n","export const acceptedTimeFormats = ['H:mm', 'HH:mm'];\n","import {\n  always,\n  compose,\n  filter,\n  flip,\n  gt,\n  ifElse,\n  invoker,\n  isEmpty,\n  lensIndex,\n  map,\n  match,\n  pipe,\n  transduce,\n  view,\n} from \"ramda\";\nimport moment from \"moment\";\n\nconst regexMatcher = match(/\\(([0-9]+) mins?\\)/);\nconst regexFirstMatchLens = lensIndex(1);\n\nconst strToMinuteNum = pipe(\n  regexMatcher,\n  ifElse(\n    isEmpty,\n    always('0'),\n    view(regexFirstMatchLens),\n  ),\n  Number.parseInt,\n);\n\nconst mapToDuration = i => moment.duration(i, 'minutes');\nconst zeroDuration = mapToDuration(0);\n\nconst accFn = invoker(1, 'add');  // moment.add(value)\nconst filterFn = flip(gt)(0);  // or gt(__, 0)\nconst xForm = compose(\n  map(strToMinuteNum),\n  filter(filterFn),\n  map(mapToDuration),\n);\n\nexport const stringsToTimeTotal = transduce(xForm, accFn, zeroDuration);\n","import {either, isEmpty, isNil, test} from \"ramda\";\n\nexport const startsWithGpgOrFt = test(/^(?:ft)|^(?:facilitator)|^(?:gpg)/i);\nexport const isNilOrEmpty = either(isNil, isEmpty);\nexport const stripAllQuotes = s => s.replace(/['\"]+/g, '');\n\nexport const throwErrorWithMessage = msg => () => {\n  throw new Error(msg);\n};\n","import {always, any, find, isNil, pipe, test, unless, when} from \"ramda\";\nimport {startsWithGpgOrFt, throwErrorWithMessage} from \"../../utils\";\nimport {worship} from \"../category-types\";\n\nconst makeWorship = (assignedGroup) => ({category: worship, assignedGroup});\n\nexport const worshipTester = any(test(/^worship/i));\n\nexport const worshipParser = pipe(\n  unless(worshipTester, throwErrorWithMessage('Not worship strings')),\n  find(startsWithGpgOrFt),\n  when(isNil, always('')),\n  makeWorship,\n);\n","export const chapterIntro = 'introduction';\nexport const chapterReview = 'review';\nexport const devotion = 'devotion';\nexport const focusPrayer = 'focus-prayer';\nexport const video = 'video';\nexport const worship = 'worship';\nexport const other = 'other';\n\nexport const knownCategoryTypes = [\n  chapterIntro,\n  chapterReview,\n  devotion,\n  focusPrayer,\n  video,\n  worship,\n  other,\n];\n","import {always, any, complement, findLast, match, pipe, reduce, test, unless, when} from \"ramda\";\nimport {isNilOrEmpty, stripAllQuotes, throwErrorWithMessage} from \"../../utils\";\nimport {devotion} from \"../category-types\";\n\nconst makeDevotion = (topic) => ({category: devotion, topic});\n\nexport const devotionTester = any(test(/(?:^devotion\\s+.+)|(?:.+\\s+devotion)$/i));\nconst devotionTopicMatcher = match(/(?:\\(changed?\\sto\\)\\s+)?(?:(?:devotion\\s*-*\\s*(.+))|(?:(?:\\)\\s+)?(.+)\\s+devotion$))/i);\n\nconst topicReducer = (acc, curr) => pipe(\n  devotionTopicMatcher,\n  findLast(complement(isNilOrEmpty)),\n  when(isNilOrEmpty, always(acc)),\n)(curr);\n\nexport const devotionParser = pipe(\n  unless(devotionTester, throwErrorWithMessage('Not devotion strings')),\n  reduce(topicReducer, ''),\n  stripAllQuotes,\n  when(isNilOrEmpty, always('')),\n  makeDevotion,\n);\n","import {always, any, complement, converge, find, findLast, match, pipe, reduce, test, unless, when} from \"ramda\";\nimport {isNilOrEmpty, startsWithGpgOrFt, throwErrorWithMessage} from \"../../utils\";\nimport {focusPrayer} from \"../category-types\";\n\nconst makeFocusPrayer = (assignedGroup, prayerTarget) => ({category: focusPrayer, assignedGroup, prayerTarget});\n\nexport const focusPrayerTester = any(test(/^lrp prayer\\s+focus/i));\nconst focusPrayerMatcher = match(/^lrp prayer\\s+focus\\s+-+\\s+(.*)/i);\n\nconst prayerTargetReducer = (acc, curr) => pipe(\n  focusPrayerMatcher,\n  findLast(complement(isNilOrEmpty)),\n  when(isNilOrEmpty, always(acc)),\n)(curr);\n\nexport const focusPrayerParser = pipe(\n  unless(focusPrayerTester, throwErrorWithMessage('Not focus prayer strings')),\n  converge(\n    makeFocusPrayer, [\n      pipe(find(startsWithGpgOrFt), when(isNilOrEmpty, always(''))),\n      pipe(\n        reduce(prayerTargetReducer, ''),\n        when(isNilOrEmpty, always('')),\n      ),\n    ],\n  ),\n);\n","import {always, any, apply, ifElse, juxt, lensIndex, match, pipe, reduce, test, trim, unless, view, when} from \"ramda\";\nimport {isNilOrEmpty, stripAllQuotes, throwErrorWithMessage} from \"../../utils\";\nimport {chapterReview} from \"../category-types\";\n\nconst makeChapter = (number, topic) => ({category: chapterReview, number, topic});\n\nexport const chapterReviewTester = any(test(/^chapter\\s*\\d*.+\\s*review$/i));\nconst chapterReviewMatcher = match(/^chapter\\s*(\\d*)\\s*(.+)\\s*review$/i);\n\nconst chapterIndexLens = lensIndex(1);\nconst chapterTopicLens = lensIndex(2);\n\nconst chapterIndexAndTopicReducer = (acc, curr) => pipe(\n  chapterReviewMatcher,\n  ifElse(\n    isNilOrEmpty,\n    always(acc),\n    juxt([\n      pipe(view(chapterIndexLens), when(isNilOrEmpty, always('-1')), Number.parseInt),\n      pipe(\n        view(chapterTopicLens),\n        when(isNilOrEmpty, ''),\n        stripAllQuotes,\n        trim,\n        when(isNilOrEmpty, always('')),\n      ),\n    ]),\n  ),\n)(curr);\n\nexport const chapterReviewParser = pipe(\n  unless(chapterReviewTester, throwErrorWithMessage('Not chapter review strings')),\n  reduce(chapterIndexAndTopicReducer, []),\n  when(isNilOrEmpty, always([-1, ''])),\n  apply(makeChapter),\n);\n","import {\n  always,\n  any,\n  apply,\n  either,\n  ifElse,\n  juxt,\n  lensIndex,\n  match,\n  pipe,\n  reduce,\n  test,\n  trim,\n  unless,\n  view,\n  when,\n} from \"ramda\";\nimport {isNilOrEmpty, stripAllQuotes, throwErrorWithMessage} from \"../../utils\";\nimport {chapterIntro} from \"../category-types\";\n\nconst makeChapter = (number, topic) => ({category: chapterIntro, number, topic});\n\nexport const chapterIntroTester = any(test(/(?:^chapter\\s*\\d*\\s*.+\\s*introduction$)|(?:^introduction\\s*to\\s*chapter\\s*\\d*\\s*.*\\s*)/i));\nconst chapterIntroMatcher = match(/(?:^chapter\\s*(\\d*)\\s*(.+)\\s*introduction$)|(?:^introduction\\s*to\\s*chapter\\s*(\\d*)\\s*(.*)\\s*)/i);\n\nexport const viewChapterNumber = either(view(lensIndex(1)), view(lensIndex(3)));\nexport const viewChapterTopic = either(view(lensIndex(2)), view(lensIndex(4)));\n\nconst chapterIndexAndTopicReducer = (acc, curr) => pipe(\n  chapterIntroMatcher,\n  ifElse(\n    isNilOrEmpty,\n    always(acc),\n    juxt([\n      pipe(viewChapterNumber, when(isNilOrEmpty, always('-1')), Number.parseInt),\n      pipe(\n        viewChapterTopic,\n        when(isNilOrEmpty, always('')),\n        stripAllQuotes,\n        trim,\n        when(isNilOrEmpty, always('')),\n      ),\n    ]),\n  ),\n)(curr);\n\nexport const chapterIntroParser = pipe(\n  unless(chapterIntroTester, throwErrorWithMessage('Not chapter intro strings')),\n  reduce(chapterIndexAndTopicReducer, []),\n  when(isNilOrEmpty, always([-1, ''])),\n  apply(makeChapter),\n);\n","import {always, any, complement, findLast, match, pipe, reduce, test, unless, when} from \"ramda\";\nimport {isNilOrEmpty, stripAllQuotes, throwErrorWithMessage} from \"../../utils\";\nimport {video} from \"../category-types\";\n\nconst makeVideo = (title) => ({category: video, title});\n\nconst removeTrailingParenthesisAndContents = s => s.replace(/\\s*\\(.*\\)\\s*$/, '');\n\nexport const videoTester = any(test(/^(?:\\(changed?\\sto\\)\\s+)?(?:video\\s*-*\\s*.*)/i));\nconst videoTitleMatcher = match(/^(?:\\(changed?\\sto\\)\\s+)?(?:video\\s*-*\\s*(.*))/i);\n\nconst titleReducer = (acc, curr) => pipe(\n  videoTitleMatcher,\n  findLast(complement(isNilOrEmpty)),\n  when(isNilOrEmpty, always(acc)),\n)(curr);\n\nexport const videoParser = pipe(\n  unless(videoTester, throwErrorWithMessage('Not video strings')),\n  reduce(titleReducer, ''),\n  stripAllQuotes,\n  removeTrailingParenthesisAndContents,\n  when(isNilOrEmpty, always('')),\n  makeVideo,\n);\n","import {always, cond, T} from \"ramda\";\nimport {worshipParser, worshipTester} from \"./parsers/worship-tester\";\nimport {devotionParser, devotionTester} from \"./parsers/devotion-tester\";\nimport {focusPrayerParser, focusPrayerTester} from \"./parsers/focus-prayer-tester\";\nimport {chapterReviewParser, chapterReviewTester} from \"./parsers/chapter-review-tester\";\nimport {chapterIntroParser, chapterIntroTester} from \"./parsers/chapter-intro-tester\";\nimport {videoParser, videoTester} from \"./parsers/video-tester\";\nimport {other} from \"./category-types\";\n\nexport const guessCategoryFromRawStrings = cond([\n  [worshipTester, worshipParser],\n  [devotionTester, devotionParser],\n  [focusPrayerTester, focusPrayerParser],\n  [chapterReviewTester, chapterReviewParser],\n  [chapterIntroTester, chapterIntroParser],\n  [videoTester, videoParser],\n  [T, always({category: other})],\n]);\n","import {ParsingErrors} from \"../errors\";\nimport {always, apply, converge, dec, identity, ifElse, juxt, last, length, lensIndex, pipe, slice, view} from \"ramda\";\nimport moment from \"moment\";\nimport {acceptedTimeFormats} from \"../consts\";\nimport {stringsToTimeTotal} from \"../strings-to-time-total/strings-to-time-total\";\nimport {guessCategoryFromRawStrings} from \"../categories/guess-category\";\n\nconst makeRow = (startTime, declaredDuration, activityTexts, facilitator, errors) => ({\n  startTime,\n  declaredDuration,\n  activityTexts,\n  facilitator,\n  errors,\n  category: guessCategoryFromRawStrings(activityTexts),\n});\n\nconst startTimeFromStr = s => moment(s, acceptedTimeFormats);\nconst areDurationsAccepted = (declared, tallied) => tallied.asMilliseconds() === 0 || declared.asMilliseconds() === tallied.asMilliseconds();\nconst makeMismatchedDurationsError = (declared, total, activityTexts) => ParsingErrors.ofMismatchedDurations(`${declared.asMinutes()} | ${activityTexts}`, declared, total);\n\nconst getDeclaredDurationFromInt = i => moment.duration(i, 'minutes');\nconst getDeclaredDurationFromStr = pipe(Number.parseInt, getDeclaredDurationFromInt);\n\nconst getStartTime = pipe(\n  view(lensIndex(0)),\n  startTimeFromStr,\n);\n\nconst getDeclaredDuration = pipe(\n  view(lensIndex(1)),\n  getDeclaredDurationFromStr,\n);\n\nconst getActivityTextStrings = converge(\n  slice, [\n    always(2),\n    pipe(length, dec),\n    identity,\n  ],\n);\nconst getFacilitatorStr = last;\n\nconst getDeclaredAndActualTimesAndActivityText = juxt([\n  getDeclaredDuration,\n  pipe(getActivityTextStrings, stringsToTimeTotal),\n  getActivityTextStrings,\n]);\n\nconst getErrors = pipe(\n  getDeclaredAndActualTimesAndActivityText,\n  ifElse(\n    apply(areDurationsAccepted),\n    always([]),\n    juxt([apply(makeMismatchedDurationsError)]),\n  ),\n);\n\n// string[] => {startTime, declaredDuration, activityTexts, facilitator, errors}\nexport const handleRow = converge(\n  makeRow, [\n    getStartTime,\n    getDeclaredDuration,\n    getActivityTextStrings,\n    getFacilitatorStr,\n    getErrors,\n  ],\n);\n","import {handleRow} from \"../handle-row\";\nimport moment from \"moment\";\nimport {acceptedTimeFormats} from \"../consts\";\nimport {\n  always,\n  append,\n  assoc,\n  compose,\n  cond,\n  converge,\n  curry,\n  dissoc,\n  equals,\n  flip,\n  isEmpty,\n  keys,\n  last,\n  length,\n  lensPath,\n  lensProp,\n  over,\n  pipe,\n  prop,\n  set,\n  startsWith,\n  T,\n  transduce,\n  unless,\n  view,\n} from \"ramda\";\nimport {handleSession} from \"../handle-session\";\nimport {throwErrorWithMessage} from \"../utils\";\n\nexport const isStrStartTime = str => str.length >= 4 && moment(str, acceptedTimeFormats, true).isValid();\n\nconst pushIndexToAllExistingFacilitators = (facilitatorToRows, index) => {\n  keys(facilitatorToRows).forEach(name => {\n    facilitatorToRows[name].push(index);\n  });\n};\n\nexport const oldHandlePage = curry((handleSession, textContent) => {\n  const sessions = [];\n\n  const rows = [];\n  let pendingRowInput = [];\n\n  const discarded = [];\n  const facilitatorToRows = {};\n  const allFacilitatorsRows = [];\n\n\n  const pushIndexToAllExistingFacilitators = (index) => {\n    keys(facilitatorToRows).forEach(name => {\n      facilitatorToRows[name].push(index);\n    });\n  };\n\n  let hasStartedParsingRows = false;\n\n  let allTextsIndex = 0;\n  let currentRowIndex = -1;\n  while (allTextsIndex < textContent.items.length) {\n    const item = textContent.items[allTextsIndex];\n    if (item.str.startsWith('Session ')) {\n      const s = handleSession(item.str);\n      sessions.push(s);\n      hasStartedParsingRows = false;\n\n    } else {\n      if (isStrStartTime(item.str)) {\n        if (pendingRowInput && pendingRowInput.length) {\n          const r = handleRow(pendingRowInput);\n          r.sessionIndex = last(sessions).sessionNumber - 1;\n          rows[currentRowIndex] = r;\n          if (r.facilitator && r.facilitator.toLocaleLowerCase() === 'all') {\n            allFacilitatorsRows.push(currentRowIndex);\n            pushIndexToAllExistingFacilitators(currentRowIndex);\n          } else {\n            if (!facilitatorToRows[r.facilitator]) {\n              facilitatorToRows[r.facilitator] = allFacilitatorsRows.slice();\n            }\n            facilitatorToRows[r.facilitator].push(currentRowIndex);\n          }\n        }\n        pendingRowInput = [];\n        currentRowIndex += 1;\n        hasStartedParsingRows = true;\n      }\n      if (!hasStartedParsingRows) {\n        discarded.push(item.str);\n      } else {\n        pendingRowInput.push(item.str);\n      }\n    }\n\n    allTextsIndex += 1;\n  }\n  return {\n    sessions,\n    rows,\n    facilitatorToRows,\n    discarded,\n  };\n});\n\nconst makePage = ({sessions, rows, facilitatorToRows, discarded}) => ({\n  sessions,\n  rows,\n  facilitatorToRows,\n  discarded,\n});\n\nconst viewItems = prop('items');\n\nconst viewItemStr = prop('str');\nconst viewItemY = view(lensPath(['transform', 5]));\n\nconst isStrSession = startsWith('Session ');\n\nconst sessionType = 'session';\nconst pendingCellType = 'cell';\nconst cellFlushMarkerType = 'cell:flush-marker';\nconst discardType = 'discard';\n\nconst assocType = assoc('type');\nconst dissocType = dissoc('type');\nconst viewType = prop('type');\n\nconst assocSessionIndex = assoc('sessionIndex');\nconst assocRawStr = assoc('rawStr');\n\nconst makeDiscard = assoc('type', discardType);\n\nconst makeResult = () => ({sessions: [], rows: [], pendingCells: [], lastY: -1});\nconst sessionsLens = lensProp('sessions');\nconst rowsLens = lensProp('rows');\nconst pendingCellsLens = lensProp('pendingCells');\nconst lastYLens = lensProp('lastY');\nconst viewCurrentSessionsIndex = pipe(view(sessionsLens), length);\n\nconst appendWithLens = flip(over(flip(append)));\nconst appendToSessions = appendWithLens(sessionsLens);\nconst appendToRows = appendWithLens(rowsLens);\nconst appendToPendingCells = appendWithLens(pendingCellsLens);\n\nconst makeCellFlushMarker = pipe(assocRawStr, assocType(cellFlushMarkerType));\n\nconst xForm = compose(\n  cond([\n    [pipe(viewItemStr, isStrSession), pipe(viewItemStr, handleSession, assocType(sessionType))],\n    [pipe(viewItemStr, isStrStartTime), makeCellFlushMarker],\n    [T, makeDiscard],\n  ]),\n);\n\nconst ifTypeEquals = pipe(viewType, equals);\nconst updateLastY = set(lastYLens);\n\nconst flushPendingCellsIntoRowIfNotEmpty =\n  unless(\n    pipe(view(pendingCellsLens), isEmpty),\n    over(\n      pendingCellsLens,\n      pipe(over(rowsLens, handleRow), always([])),\n    ),\n  );\n\nconst accFlushCell = acc => pipe(\n  flushPendingCellsIntoRowIfNotEmpty(),\n);\n\nconst accRow = acc => pipe(\n  dissocType,\n  converge(assocSessionIndex, [viewCurrentSessionsIndex]),\n  converge(updateLastY, [viewItemY]),\n  appendToRows(acc),\n);\n\nconst accFn = (acc, cur) => pipe(\n  cond([\n    [ifTypeEquals(sessionType), pipe(dissocType, appendToSessions(acc))],\n    [ifTypeEquals(cellFlushMarkerType), accFlushCell(acc)],\n    [ifTypeEquals(pendingCellType), pipe(discardType, appendToPendingCells(acc))],\n    [ifTypeEquals(discardType), always(acc)],\n    [T, throwErrorWithMessage(`Unknown inc cur ${cur}`)],\n  ]),\n)(cur);\n\nconst handlePage = pipe(\n  viewItems,\n  transduce(xForm, accFn, makeResult()),\n  flushPendingCellsIntoRowIfNotEmpty,\n  dissoc('pendingCells'),\n);\n\nexport const makeHandlePage = curry(handlePage);\n","import pdf from \"./pdf-parse\";\nimport {from} from \"rxjs\";\nimport {handleSession} from \"./handle-session\";\nimport {flip, pipe} from \"ramda\";\nimport {oldHandlePage} from \"./handle-page/handle-page\";\n\nconst pdfOptionThenBuffer = flip(pdf);\n\nconst renderOptions = {\n  normalizeWhitespace: true,\n  disableCombineTextItems: true,\n};\n\nconst renderPage = pageData => pageData\n  .getTextContent(renderOptions)\n  .then(oldHandlePage(handleSession));\n\nexport const readBufferToPages = pipe(\n  pdfOptionThenBuffer({pagerender: renderPage}),\n  from,\n);\n","import React, {useEffect, useState} from 'react';\nimport {DropzoneArea} from \"material-ui-dropzone\";\nimport {readFileAsArrayBuffer} from \"../../Utils\";\nimport {useTranslation} from \"react-i18next\";\nimport Snackbar from \"@material-ui/core/es/Snackbar\";\nimport {finalize, map, switchMap, tap} from \"rxjs/operators\";\nimport {keys} from \"ramda\";\nimport CircularProgress from \"@material-ui/core/es/CircularProgress\";\nimport \"./PdfFilePicker.css\";\nimport {readBufferToPages} from \"../../libs/karios-pdf-parser\";\n\nexport function PdfFilePicker(props) {\n  const {onResultLoaded} = props;\n  const {t} = useTranslation();\n  const [snackBarMessage, setSnackBarMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [file, setFile] = useState(null);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const sub = readFileAsArrayBuffer(file)\n      .pipe(\n        switchMap(readBufferToPages),\n        tap(pages => console.log('pages', pages.raw)),\n        map(pages => pages.raw.reduce((acc, cur) => ({\n            facilitatorsIndex: {\n              ...acc.facilitatorsIndex,\n              ...cur.facilitatorToRows,\n            },\n            sessions: acc.sessions.concat(cur.sessions),\n            rows: acc.rows.concat(cur.rows),\n          }), {sessions: [], rows: [], facilitatorsIndex: {}},\n        )),\n        tap(result => result.facilitators = keys(result.facilitatorsIndex)),\n        finalize(() => setIsLoading(false)),\n      )\n      .subscribe(result => {\n        console.log('transformed', result);\n        onResultLoaded && onResultLoaded(result);\n\n      }, error => {\n        console.error(error);\n        setSnackBarMessage(t('uploadFileFailed'));\n      });\n\n    return () => sub.unsubscribe();\n  }, [file]);\n\n  const onDrop = file => {\n    setIsLoading(true);\n    setFile(file);\n  };\n\n  const onDropRejected = () => {\n    setSnackBarMessage(t('uploadFileFailed'));\n  };\n\n  return (\n    <div className=\"pdf-file-picker\">\n      {isLoading\n        ? <div className=\"loading-container\"><CircularProgress/></div>\n        : <DropzoneArea\n          dropZoneClass=\"drop-zone\"\n          filesLimit={1}\n          acceptedFiles={['application/pdf']}\n          dropzoneText={t('uploadFilePrompt')}\n          showPreviewsInDropzone={true}\n          showFileNamesInPreview={true}\n          showAlerts={false}\n          onDrop={onDrop}\n          onDropRejected={onDropRejected}/>\n      }\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={!!snackBarMessage}\n        autoHideDuration={5000}\n        onClose={() => setSnackBarMessage('')}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">{snackBarMessage}</span>}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport CircularProgress from \"@material-ui/core/es/CircularProgress\";\nimport \"./Loading.css\";\n\nexport function Loading() {\n  return <div className=\"loading-container\"><CircularProgress/></div>\n}\n","import {addIndex, curry, is, map, pipe, split, when} from \"ramda\";\nimport React, {Fragment} from \"react\";\nimport {capitalize, lowerCase} from \"lodash-es\";\n\nexport const RowWithKey = curry((key, children) => <tr key={key}>{children}</tr>);\n\nexport const Header = h => <th key={h}>{h}</th>;\nexport const CapitalizedHeader = pipe(\n  lowerCase,\n  capitalize,\n  Header,\n);\n\nexport const TwoFragments = curry((a, b) => <>{a}{b}</>);\nexport const Cell = curry((key, text) => <td key={key} className=\"tableexport-string\">{text}</td>);\n\nexport const mapWithBr = addIndex(map)((item, key) => <Fragment key={key}>{item}<br/></Fragment>);\nexport const replaceLineBreakWithBr = when(is(String), pipe(\n  split('\\n'),\n  mapWithBr,\n));\n","import {\n  addIndex,\n  always,\n  assoc,\n  compose,\n  concat,\n  cond,\n  curry,\n  dropLast,\n  filter,\n  head,\n  join,\n  map,\n  mergeDeepWith,\n  path,\n  pathEq,\n  pipe,\n  prop,\n  propEq,\n  props,\n  replace,\n  split,\n  T,\n  transduce,\n  unless,\n  when,\n} from \"ramda\";\nimport {\n  chapterIntro,\n  chapterReview,\n  devotion,\n  focusPrayer,\n  other,\n  video,\n  worship,\n} from \"../libs/karios-pdf-parser/categories/category-types\";\nimport {isNilOrEmpty, stripAllQuotes} from \"../libs/karios-pdf-parser/utils\";\n\nexport function pushToArrayAtKey(obj, key, newItem) {\n  if (!obj[key]) {\n    obj[key] = [];\n  }\n  obj[key].push(newItem);\n}\n\n\nconst catEq = propEq('category');\n\nexport const viewTextFromCategory = cond([\n  [catEq(chapterIntro), pipe(props(['number', 'topic']), join(' '))],\n  [catEq(chapterReview), pipe(props(['number', 'topic']), join(' '))],\n  [catEq(devotion), prop('topic')],\n  [catEq(focusPrayer), pipe(props(['prayerTarget', 'assignedGroup']), join('\\n- '))],\n  [catEq(video), prop('title')],\n  [catEq(worship), prop('assignedGroup')],\n  [catEq(other), always('')],\n  [T, always('')],\n]);\n\nconst rowCatEq = pathEq(['category', 'category']);\n\nexport const fallbackTextForRow = cond([\n  [rowCatEq(video), pipe(prop('activityTexts'), head, stripAllQuotes)],\n  [T, pipe(prop('activityTexts'), join(excelLinefeed))],\n]);\n\nexport const collectRowsUnderSessionIndex = sI => filter(propEq('sessionIndex', sI));\nexport const formatAsShortName = pipe(split(' '), dropLast(1), join(' '));\n\nexport const formatSessionDateStr = sessionTime => sessionTime.format('MMM D (ddd)');\nexport const formatRowTimeStr = rowTime => rowTime.format('h:mm');\nexport const formatStartEndTimeStr = (a, b) => `${formatRowTimeStr(a)}-${formatRowTimeStr(b)}`;\n\n// => {'worship': {'Sam': [rowIndex]}}}\nconst categoryWithNameFromRow = (r, i) => assoc(\n  path(['category', 'category'], r),\n  nameFromRow(r, i),\n  {},\n);\n\n// => {'Sam': [rowIndex]}\nconst nameFromRow = (r, i) => assoc(path(['facilitator'], r), [i], {});\n\nconst xForm = compose(\n  addIndex(map)(categoryWithNameFromRow),\n);\n\nconst accFn = mergeDeepWith(concat);\nexport const mapRowsToIndexByCategoryThenName = transduce(xForm, accFn, {});\n\nexport const viewByIndex = curry((a, i) => a && a[i]);\n\nexport const mapRowToString = fallBackTextFn => row => unless(isNilOrEmpty, pipe(\n  prop('category'),\n  viewTextFromCategory,\n  when(isNilOrEmpty, () => fallBackTextFn(row)),\n  replaceWithExcelLineFeed,\n))(row);\n\nexport const mapRowToStringWithFallback = mapRowToString(unless(isNilOrEmpty, fallbackTextForRow));\n\nexport const excelLinefeed = '\\r\\n';\nexport const replaceWithExcelLineFeed = replace(/\\r?\\n/g, excelLinefeed);\n","import {addIndex, always, apply, curry, flip, identity, ifElse, juxt, map, pipe, prepend, prop, sortBy} from \"ramda\";\nimport {CapitalizedHeader, Cell, Header, RowWithKey} from \"../../utils/ui-utils\";\nimport React, {useMemo} from \"react\";\nimport \"./TableByCategories.css\";\nimport {\n  excelLinefeed,\n  formatAsShortName,\n  mapRowsToIndexByCategoryThenName,\n  mapRowToStringWithFallback,\n  viewByIndex,\n} from \"../../utils/utils\";\nimport {\n  chapterIntro,\n  chapterReview,\n  devotion,\n  focusPrayer,\n  video,\n  worship,\n} from \"../../libs/karios-pdf-parser/categories/category-types\";\nimport {isNilOrEmpty} from \"../../libs/karios-pdf-parser/utils\";\n\nconst sortedCategories = [\n  worship,\n  devotion,\n  focusPrayer,\n  chapterReview,\n  chapterIntro,\n  video,\n];\n\nexport const TableByCategories = ({rows, sessions, facilitators}) => {\n  const catToNameToRowIndex = useMemo(() => mapRowsToIndexByCategoryThenName(rows), [rows]);\n  const names = useMemo(() => sortBy(identity, facilitators), [facilitators]);\n  return pipe(\n    makeRows(sortedCategories, names, rows),\n    makeTable(names),\n  )(catToNameToRowIndex);\n};\n\nconst makeTable = curry((names, children) =>\n  <div className=\"table-by-categories phantom\">\n    <table id=\"schedule-by-facilitator\">\n      <thead>\n      <tr>\n        <th/>\n        {map(pipe(formatAsShortName, Header))(names)}\n      </tr>\n      </thead>\n      <tbody>\n      {children}\n      </tbody>\n    </table>\n  </div>,\n);\n\n// catType => [{'Sam': rowIndex[], 'Laura': rowIndex[], …}, catType]\nconst viewNameIndexFromCatType = flip(juxt([prop, identity]));\n\n// {'Sam': rowIndex[], 'Laura': rowIndex[], …} => name => rowIndex[]\nconst viewRowIndexArrayFromName = flip(prop);\n\n// {'Sam': rowIndex[], 'Laura': rowIndex[], …} => cell[]\nconst mapToCellsByCatType = curry((names, rows, namesToRowIndex, catType) => {\n  return pipe(\n    addIndex(map)((c, i) => pipe(\n      viewRowIndexArrayFromName(namesToRowIndex),\n      ifElse(\n        isNilOrEmpty,\n        renderCell(i),\n        pipe(\n          map(viewByIndex(rows)),\n          renderCell(i),\n        ),\n      ),\n    )(c)),\n    prepend(CapitalizedHeader(catType)),\n    RowWithKey(catType),\n  )(names);\n});\n\nconst renderCell = index => {\n  return ifElse(\n    isNilOrEmpty,\n    always(Cell(index, '')),\n    pipe(\n      addIndex(map)((c, i) => renderRow(`${index} ${i}`)(c)),\n      Cell(index),\n    ),\n  );\n};\n\nconst renderRow = key => pipe(\n  mapRowToStringWithFallback,\n  c => <span key={key}>{c + excelLinefeed}<br/></span>,\n);\n\nconst makeRows = curry((catTypes, names, rows, catToNameToRowIndex) => {\n  return map(pipe(\n    viewNameIndexFromCatType(catToNameToRowIndex),\n    apply(mapToCellsByCatType(names, rows)),\n  ))(catTypes);\n});\n","import {\n  addIndex,\n  apply,\n  compose,\n  converge,\n  filter,\n  head,\n  juxt,\n  last,\n  lensProp,\n  map,\n  pathEq,\n  pipe,\n  prop,\n  unless,\n  view,\n} from \"ramda\";\nimport React from \"react\";\nimport {\n  collectRowsUnderSessionIndex,\n  excelLinefeed,\n  formatAsShortName,\n  formatSessionDateStr,\n  formatStartEndTimeStr,\n  mapRowToStringWithFallback,\n} from \"../../utils/utils\";\nimport './TableBySessions.css';\nimport {\n  chapterIntro,\n  chapterReview,\n  devotion,\n  focusPrayer,\n  video,\n  worship,\n} from \"../../libs/karios-pdf-parser/categories/category-types\";\nimport {isNilOrEmpty} from \"../../libs/karios-pdf-parser/utils\";\nimport {CapitalizedHeader, Cell, replaceLineBreakWithBr, RowWithKey, TwoFragments} from \"../../utils/ui-utils\";\n\nconst sortedCategories = [\n  worship,\n  devotion,\n  focusPrayer,\n  chapterReview,\n  chapterIntro,\n  video,\n];\n\nexport const TableBySessions = ({sessions, rows}) => {\n  return compose(\n    Table,\n    addIndex(map)((s, sI) => compose(\n      RowWithKey(sI),\n      TwoFragments(Session(s)),\n      makeStartTimeAndCategories,\n      collectRowsUnderSessionIndex(sI),\n    )(rows)),\n  )(sessions);\n};\n\nconst sessionTimeLens = lensProp('date');\nconst sessionNumberLens = lensProp('sessionNumber');\n\nconst Table = children => <div className=\"table-by-sessions phantom\">\n  <table id=\"schedule-by-session\">\n    <thead>\n    <tr>\n      <th>Session</th>\n      <th>Date</th>\n      <th>Time</th>\n      {map(CapitalizedHeader)(sortedCategories)}\n    </tr>\n    </thead>\n    <tbody>\n    {children}\n    </tbody>\n  </table>\n</div>;\n\nconst Session = (session) => <>\n  <td>{view(sessionNumberLens, session)}</td>\n  <td>{pipe(view(sessionTimeLens), formatSessionDateStr)(session)}</td>\n</>;\n\nconst TimeDurationCell = pipe(formatStartEndTimeStr, Cell('duration'));\n\nconst findRowsWithCategory = c => filter(pathEq(['category', 'category'], c));\n\nconst extractShortNameFromRow = pipe(prop('facilitator'), formatAsShortName);\n\nconst mapWithShortName = row => pipe(\n  mapRowToStringWithFallback,\n  unless(isNilOrEmpty, pipe(\n    s => `${s}${excelLinefeed}- ${extractShortNameFromRow(row)}`,\n    replaceLineBreakWithBr,\n  )),\n)(row);\n\nconst Categories = rows => addIndex(map)((c, i) =>\n  pipe(\n    findRowsWithCategory(c),\n    map(mapWithShortName),\n    Cell(i),\n  )(rows),\n)(sortedCategories);\n\nconst makeStartTimeAndCategories = converge(\n  TwoFragments, [\n    pipe(juxt([head, last]), map(prop('startTime')), apply(TimeDurationCell)),\n    Categories,\n  ],\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport CircularProgress from \"@material-ui/core/es/CircularProgress\";\n\nReactDOM.render(\n  <Suspense fallback={<CircularProgress/>}>\n    <App/>\n  </Suspense>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, {Suspense, useEffect, useState} from 'react';\nimport './App.css';\nimport CssBaseline from \"@material-ui/core/es/CssBaseline\";\nimport ButtonAppBar from \"./components/ButtonAppBar/ButtonAppBar\";\nimport {PdfFilePicker} from \"./components/PdfFilePicker/PdfFilePicker\";\nimport {Loading} from \"./components/Loading/Loading\";\nimport {TableByCategories} from \"./components/TableByCategories/TableByCategories\";\nimport {TableBySessions} from \"./components/TableBySessions/TableBySessions\";\nimport {TableExport} from \"tableexport\";\nimport \"tableexport/dist/css/tableexport.min.css\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport function App() {\n  const [result, setResult] = useState(null);\n\n  useEffect(() => {\n    if (result) {\n      new TableExport(document.getElementsByTagName(\"table\"), {\n        bootstrap: true,\n        trimWhitespace: false,\n        formats: ['xlsx'],\n      });\n    }\n  });\n  //pages\n  // (9) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n  //\n  //   0:\n  //     rows: (11) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n  //     sessions: {sessionNumber: 1, date: Moment}\n  return (\n    <div className=\"App\">\n      <CssBaseline/>\n      <Suspense fallback={<Loading/>}>\n        <ButtonAppBar/>\n        {!!result\n          ? <div style={{textAlign: 'center'}}>\n            <div className=\"container\">\n              <Typography variant=\"h5\" gutterBottom>\n                Schedule by Facilitator\n              </Typography>\n              <TableByCategories {...result}/>\n            </div>\n            <div className=\"container\">\n              <Typography variant=\"h5\" gutterBottom>\n                Schedule by Session\n              </Typography>\n              <TableBySessions {...result}/>\n            </div>\n          </div>\n          : <PdfFilePicker onResultLoaded={setResult}/>\n        }\n      </Suspense>\n    </div>\n  );\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 95;"],"sourceRoot":""}